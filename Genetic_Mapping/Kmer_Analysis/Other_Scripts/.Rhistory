# Setting Variables
biomassData="/home/drt83172/Documents/QPCR_Data_Wrangler/Program/output/Data_for_project/Biomass_Data/Biomass_Data.csv"
read.table(biomassData, sep = ",", header = TRUE)
read.table(biomassData, sep = ",", header = TRUE, row.names = TRUE)
read.table(biomassData, sep = ",", header = TRUE, row.names = 1)
bmData <- read.table(biomassData, sep = ",", header = TRUE, row.names = 1)
View(bmData)
summary(bmData$CP_Ratio)
summary(bmData$CopyNum)
clear
summary(bmData$CP_Ratio)
sd(bmData$CP_Ratio)
summary(bmData$CopyNum)
sd(bmData$CopyNum)
library(tiddyverse)
library(tidyverse)
starwars
starwars()
starwars
pivot_longer(bmData, CP_Ration:CopyNum)
pivot_longer(bmData, CP_Ratio:CopyNum)
bmData_hist <- pivot_longer(bmData, CP_Ratio:CopyNum)
View(bmData_hist)
ggplot(bmData_hist, aes(x=value, color=name)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(bmData_hist, aes(x=value, color=name)) +
geom_histogram(fill="white", alpha=0.5, position="identity", binwidth=.1)
ggplot(bmData_hist, aes(x=value, color=name)) +
geom_histogram(fill="white", alpha=0.5, position="identity", binwidth=.01)
ggplot(bmData_hist, aes(x=value, color=name)) +
geom_histogram(fill="white", alpha=0.5, position="identity", binwidth=.01) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name)) +
geom_histogram(fill=name, alpha=0.5, position="identity", binwidth=.01) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(, alpha=0.5, position="identity", binwidth=.01) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.75, position="identity", binwidth=.01) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.9, y=6, label= "hello") +
annotate("text", x=.9, y=8, label= "hello") +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.9, y=6, label= paste0("CopyNum mean=", mean(bmData$CopyNum))) +
annotate("text", x=.9, y=8, label= "hello") +
theme_bw()
annotate("text", x=.9, y=6, label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2)) +
fd
)
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.9, y=6, label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, label= "hello") +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.9, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, label= "hello") +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.9, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=6, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.9, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=1, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.95, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.9, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.92, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.95, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.94, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
sd(bmData$CP_Ratio)
sd(bmData$CopyNum)
#!/usr/bin/env Rscript
library(reshape2)
library(tidyverse)
library(vegan)
library(Rfast)
library(car)
library(ggplot2)
library(plyr)
library(data.table)
# # Argument inputs
Args <- commandArgs(trailingOnly=TRUE)
# # # Testing variables # # # #
Length <- 118
data_table_comma <- read.table("/home/drt83172/Documents/QPCR_Data_Wrangler/Program/int_files/edit_me.txt", sep = ",", header = TRUE)
columns_comma <- ncol(data_table_comma)
columns_tabs <- ncol(data_table_tabs)
# # Checking if columns are tabs or comma seperated
if (columns_comma == 6){
true_data <- data_table_comma
print("Your file is comma seperated")
} else if (columns_tabs == 6){
true_data <- columns_tabs
print("Your file is tab seperated")
} else {
print("Something is wrong with the file. Are you sure there is 5 columns seperated by tabs or commas")
}
# # Splitting data  into samples and standard curve data
std_data <- true_data[true_data$Treatment %like% "std", ]
water_data <- true_data[true_data$Treatment == regex('water', ignore_case = TRUE), ]
std_data <- rbind(std_data,water_data)
sample_data <- true_data[!grepl("std", true_data$Treatment),]
sample_data <- sample_data[sample_data$Treatment != regex('water', ignore_case = TRUE),]
# # calculating average of samples and standards
Sample_means = ddply(sample_data, .(Treatment), summarize,
meanCP = mean(Cp))
Std_means = ddply(std_data, .(Treatment), summarize,
meanCP = mean(Cp), ngDNA = mean(Concentration)*5)
Std_means$CopyNumber <- (Std_means$ngDNA * 6.02214076*10^23)/ (Length *650 * 10^9)
################ Making functions for finding line components ##################
Find_XY <- function(data_col) {
Std_means$xy <- Std_means$meanCP*data_col
XY <- sum(Std_means$xy)
return(XY)
}
Find_X2 <- function(data_col){
Std_means$x2 <- data_col^2
X2 <- sum(Std_means$x2)
return(X2)
}
Find_X <- function(data_col){
X <- sum(data_col)
return(X)
}
Find_Y <- function(data_col){
Y <- sum(data_col)
return(Y)
}
# # Finding standard curve for ng of DNA
ng_XY <- Find_XY(Std_means$ngDNA)
ng_X2 <- Find_X2(Std_means$ngDNA)
ng_X <- Find_X(Std_means$ngDNA)
ng_Y <- Find_Y(Std_means$ngDNA)
ng_n = nrow(Std_means)
ng_m = ((ng_n * ng_XY) - (ng_X * ng_Y)) / ((ng_n * ng_X2) - ng_X^2)
ng_b = (ng_Y-(ng_m*ng_X))/ng_n
# # using line of best fit equation to get ng of DNA
Sample_means$ngDNA <- round(((Sample_means$meanCP)-ng_b)/ng_m, digits = 5)
ng_r <- round(cor(Std_means$ngDNA,Std_means$meanCP), digits = 4)
# print(paste0("r squared value for ng of DNA is  ", ng_r^2))
# # Finding standard curve for Copy Number
CN_XY <- Find_XY(Std_means$CopyNumber)
CN_X2 <- Find_X2(Std_means$CopyNumber)
CN_X <- Find_X(Std_means$CopyNumber)
CN_Y <- Find_Y(Std_means$meanCP)
CN_n = nrow(Std_means)
CN_m = ((CN_n * CN_XY) - (CN_X * CN_Y)) / ((CN_n * CN_X2) - CN_X^2)
CN_b = (CN_Y-(CN_m*CN_X))/CN_n
# # using line of best fit equation to get copy number
Sample_means$CopyNumber <- round(((Sample_means$meanCP)-CN_b)/CN_m, digits = 0)
CN_r <- round(cor(Std_means$CopyNumber,Std_means$meanCP), digits = 4)
# print(paste0("r squared value for Copy Number is ", CN_r^2))
######################### creating log of starting DNA to calculate efficiency #######################################
std_means_only <- Std_means[Std_means$Treatment %like% "std", ]
std_means_only$LogCopyNumber <- log10(std_means_only$CopyNumber)
# # finding the sum of X*Y
std_means_only$Lxy <- std_means_only$meanCP*std_means_only$LogCopyNumber
LXY <- sum(std_means_only$Lxy)
# # finding X^2
std_means_only$Lx2 <- std_means_only$LogCopyNumber^2
LX2 <- sum(std_means_only$Lx2)
# # finding the sum of X
LX <- sum(std_means_only$LogCopyNumber)
# # finding the sum of Y
LY <- sum(std_means_only$meanCP)
# # finding m and b
Ln = nrow(std_means_only)
Lm = ((Ln * LXY) - (LX * LY)) / ((Ln * LX2) - LX^2)
Lb = (LY-(Lm*LX))/Ln
efficiency <- as.data.frame(std_means_only)
E <- (-1+10^(-1/Lm))*100
LCN_r <- round(cor(std_means_only$LogCopyNumber,std_means_only$meanCP), digits = 4)
Sample_means$LogCopyNumber <- round(((Sample_means$meanCP)-Lb)/Lm, digits = 5)
print(paste0("efficiency is ", E))
print(paste0("r squared value for log(Copy Number) is  ", LCN_r^2))
print(paste0("Targets for r squared is >98 and for efficiency is 90-110"))
write.csv(Sample_means,"Sample_Data.csv", row.names = TRUE)
################################## Making Graphs ###############################
head(Std_means)
# # Graph for log of stuff
ggplot() +
geom_point(data = std_means_only, aes(x = std_means_only$LogCopyNumber, y = std_means_only$meanCP), color='black', size = 5) +
geom_point(data = Sample_means, aes(x = Sample_means$LogCopyNumber, y = Sample_means$meanCP), color='Green') +
annotate(geom="text",x=6, y=30, label= paste0("r squared value ", LCN_r^2)) +
annotate(geom="text",x=6, y=25, label= paste0("Efficiency ", E))
std_means_only
library(tidyverse)
# Setting Variables
biomassData="/home/drt83172/Documents/QPCR_Data_Wrangler/Program/output/Data_for_project/Biomass_Data/Biomass_Data.csv"
bmData <- read.table(biomassData, sep = ",", header = TRUE, row.names = 1)
# Checking differences between CP and Copy number.
# Technically copy number should be better to use because the quantities of amplicon can be different for the same CP number
summary(bmData$CP_Ratio)
sd(bmData$CP_Ratio)
summary(bmData$CopyNum)
sd(bmData$CopyNum)
bmData_hist <- pivot_longer(bmData, CP_Ratio:CopyNum)
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.94, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
bmData$CopyNum1 <- bmData$CopyNum+1
View(bmData)
bmData2 <- bmData
library(tidyverse)
# Setting Variables
biomassData="/home/drt83172/Documents/QPCR_Data_Wrangler/Program/output/Data_for_project/Biomass_Data/Biomass_Data.csv"
bmData <- read.table(biomassData, sep = ",", header = TRUE, row.names = 1)
# Checking differences between CP and Copy number.
# Technically copy number should be better to use because the quantities of amplicon can be different for the same CP number
summary(bmData$CP_Ratio)
sd(bmData$CP_Ratio)
summary(bmData$CopyNum)
sd(bmData$CopyNum)
bmData_hist <- pivot_longer(bmData, CP_Ratio:CopyNum)
bmData2 <- bmData
bmData2$CopyNum1 <- bmData$CopyNum+1
# This graph shows the difference between the CP value and the copy number ratio
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.94, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
# This graph shows the difference between the CP value and the copy number ratio
ggplot(bmData_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
annotate("text", x=.94, y=6, size=3, col="red", label= paste0("CopyNum mean=", round(mean(bmData$CopyNum),2))) +
annotate("text", x=.9, y=8, size=3, col="blue", label= paste0("CP mean=", round(mean(bmData$CP_Ratio),2))) +
theme_bw()
View(bmData2)
bmData2 <- subset(bmData2,select = -c(CP_Ratio))
bmData2_hist <- pivot_longer(bmData, CopyNum1:CopyNum)
bmData2_hist <- pivot_longer(bmData2, CopyNum1:CopyNum)
ggplot(bmData2_hist, aes(x=value, color=name, fill=name)) +
geom_histogram(alpha=0.5, position="identity", binwidth=.01) +
theme_bw()
library("pwr")
packages.install("pwr")
install.packages("pwr")
library("pwr")
install.packages("pwr")
install.packages("pwr")
